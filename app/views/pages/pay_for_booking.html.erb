<div class="col-md-10 col-md-offset-1 payment-wrapper">
  <h3><%= t('payment.payment') %></h3>
  <hr>
  <div class="container">
    <div class="row">
      <div class="col-md-8">
        <div class="card">
          <%= simple_form_for @user, url: charges_url(amount: @amount, booking: @booking.id), method: :post, html: { id: "booking-payment" } do |f| %>
            <h4><%= t('payment.personal_infos') %></h4>
            <hr>
            <div class="form-inputs">
              <div class="row">
                <div class="col-md-6">
                  <%= f.input :first_name, required: true, autofocus: true, input_html: {value: @user.first_name} %>
                </div>
                <div class="col-md-6">
                  <%= f.input :last_name, required: true, input_html: {value: @user.last_name}  %>
                </div>
                <div class="col-md-12">
                  <%= f.input :address, required: true, input_html: {value: @user.address}  %>
                </div>
                <div class="col-md-6">
                  <%= f.input :postal_code, required: true, input_html: {value: @user.postal_code}  %>
                </div>
              </div>
            </div>
            <h4><%= t('payment.payment_infos') %></h4>
            <hr>
            <div id="card-number"></div>
            <div id="card-errors" role="alert"></div>

            <!-- STRIPE PAYMENT -->
            <article>
              <% if flash[:error].present? %>
                <div id="error_explanation">
                  <p><%= flash[:error] %></p>
                </div>
              <% end %>
            </article>

            <script src="https://js.stripe.com/v3/"></script>
            <script>
              // Create a Stripe client
              var stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');

              // Create an instance of Elements
              var elements = stripe.elements();

              // Custom styling can be passed to options when creating an Element.
              // (Note that this demo uses a wider set of styles than the guide below.)
              var style = {
                base: {
                  color: '#32325d',
                  lineHeight: '20px',
                  fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                  fontSmoothing: 'antialiased',
                  fontSize: '16px',
                  '::placeholder': {
                    color: '#aab7c4'
                  }
                },
                invalid: {
                  color: '#fa755a',
                  iconColor: '#fa755a'
                }
              };

              // Create an instance of the card Element
              var card = elements.create('card', {hidePostalCode: true, style: style});

              // Add an instance of the card Element into the `card-element` <div>
              card.mount('#card-number');

              // Display errors
              card.addEventListener('change', function(event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                  displayError.textContent = event.error.message;
                } else {
                  displayError.textContent = '';
                }
              });

              // Create a token or display an error when the form is submitted.
              var form = document.getElementById('booking-payment');
              form.addEventListener('submit', function(event) {
                event.preventDefault();
                stripe.createToken(card).then(function(result) {
                  if (result.error) {
                    // Inform the user if there was an error
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                  } else {
                    // Send the token to your server
                    stripeTokenHandler(result.token);
                  }
                });
              });

              function stripeTokenHandler(token) {
                // Insert the token ID into the form so it gets submitted to the server
                var form = document.getElementById('booking-payment');
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', token.id);
                form.appendChild(hiddenInput);

                // Submit the form
                form.submit();
              }
            </script>

            <br>

            <div class="text-center"><%= f.button :submit, class: "btn btn-primary" %></div>
          <% end %>
          <!-- END OF STRIPE -->
        </div>
      </div>
      <div class="col-md-4">
        <div class="card">
          <h4><%= t('payment.summary') %></h4>
          <hr>
          <div class="row">
            <div class="col-md-6">
              <p><%= t('payment.signup_free') %></p>
            </div>
            <div class="col-md-6" align='right'>
              <p><%= humanized_money @booking.price %> €</p>
            </div>
            <div class="col-md-12"><hr></div>
            <div class="col-md-6">
              <h4>Total:</h4>
            </div>
            <div class="col-md-6" align='right'>
              <h4><%= humanized_money @booking.price %> €</h4>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
